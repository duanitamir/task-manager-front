{"version":3,"sources":["context/user-context.js","routers/PublicRouter.js","components/PanelItem.js","components/Header.js","context/tasks-context.js","components/TaskForm.js","components/Footer.js","routers/PrivateRoute.js","components/LoadingPage.js","components/Task.js","components/TasksList.js","components/TasksApp.js","routers/AppRouter.js","components/LoginForm.js","components/RegisterForm.js","components/LoginPage.js","reducers/users.js","reducers/tasks.js","index.js"],"names":["UserContext","React","createContext","PublicRoute","isAuthenticated","Component","component","rest","props","to","PanelItem","image","text","className","src","alt","Header","userDispatch","useContext","onClick","type","history","push","document","getElementsByClassName","scrollIntoView","behavior","map","item","key","TaskContext","TaskForm","user","tasksDispatch","useState","count","setCount","error","setError","description","setDescription","onSubmit","e","preventDefault","length","task","token","value","onChange","target","Footer","PrivateRoute","LoadingPage","Task","completed","_id","completeTask","createdAt","removeTask","complete","setCompleted","moment","format","TaskList","tasks","update","setState","id","tasksData","filter","TasksApp","loading","setLoading","userData","useEffect","fetch","method","headers","Authorization","then","data","step","json","catch","console","log","createHistory","path","LoginPage","exact","LoginForm","handleLogin","setEmail","setPass","setLocation","pass","RegisterForm","setName","setAge","handleRegister","validator","require","email","password","age","name","location","isEmail","body","JSON","stringify","res","toLowerCase","includes","userReducer","state","action","localStorage","setItem","parse","getItem","removeItem","taskReducerDefaultState","taskReducer","response","uid","isAuth","renderApp","ReactDOM","render","getElementById","Index","useReducer","UserReducer","TasksReducer","undefined","Provider","AppRouter"],"mappings":"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","file":"static/js/main.c4141e40.chunk.js","sourcesContent":["import React from 'react'\n\nconst UserContext = React.createContext();\n\nexport {UserContext as default }","import React from 'react'\nimport {Redirect, Route} from 'react-router-dom'\n\nexport const PublicRoute =({isAuthenticated, component: Component, ...rest })  => {\n\n    return(\n        <Route {...rest} component={ (props)=>(\n            isAuthenticated ? (<Redirect to=\"/dashboard\"/>) : (<Component {...props}/>)\n        )} />\n    );\n}","import React from 'react'\n\n\nconst PanelItem = ({image, text}) => {\n    return(\n        <div className='panel__item'>\n            <div className='panel-container'><img className='panel__img' src={image} alt='Panel icon img'/></div>\n            <div className='panel-container'><div className=\"panel__text\">\n                {text}\n            </div>\n            </div>\n        </div>\n\n        )\n\n}\n\nexport {PanelItem as default};","import React,{useContext} from 'react';\nimport { Link } from \"react-router-dom\";\n//\n// import cloud from '../../public/images/icons/cloud.svg'\n// import idea from '../../public/images/icons/creativity.svg'\n// import actions from '../../public/images/icons/pencil.svg'\n// import team from '../../public/images/icons/team.svg'\n\nimport UserContext from '../context/user-context'\nimport {history} from \"../routers/AppRouter\";\nimport PanelItem from './PanelItem'\n\n\nconst Header = () =>  {\n\n    const {userDispatch} = useContext(UserContext)\n\n    const panelItems = [\n        {image:'/images/icons/cloud.svg', text:`Use cloud base database to store your tasks and ideas`},\n        {image:'/images/icons/pencil.svg', text: 'Easily add, mark as done and remove tasks and idea from the board'},\n        {image:'/images/icons/team.svg', text:'Work with a team and share your ideas on the task board'}\n    ]\n\n\n    const handleLogout = () => {\n        userDispatch({type:'LOGOUT'})\n        history.push('/');\n    }\n\n    const scrollAddTask = () => {\n        document.getElementsByClassName('footer')[0].scrollIntoView({ behavior: 'smooth'})\n    }\n\n    return (\n        <div>\n            <div className='header'>\n                <button className='header__button--logout button' onClick={handleLogout}>Logout</button>\n\n                <div className=\"header__container\">\n                    <h1 > <Link className='header__title' to={'/dashboard'}> Task Manager App</Link></h1>\n                    <div className='header__subtitle'> Manage your daily tasks in a click</div>\n\n                </div>\n\n                <button onClick={scrollAddTask} className='button__new-task'>Create a new Task</button>\n\n            </div>\n            <div className=\"panel\">\n                {panelItems.map(item=><PanelItem key={item.text} image={item.image} text={item.text} />)}\n            </div>\n\n        </div>\n\n    )\n}\n\nexport {Header as default}","import React from 'react'\n\nconst TaskContext = React.createContext();\n\nexport {TaskContext as default }","import React,{useContext, useState} from 'react';\nimport UserContext from '../context/user-context';\nimport TaskContext from '../context/tasks-context';\n\n\nconst TaskForm = () =>{\n\n    const { user } = useContext(UserContext)\n    const { tasksDispatch } = useContext(TaskContext);\n    const [count, setCount ] = useState(0)\n    const [error, setError] = useState('')\n\n    const [description, setDescription] = useState('');\n\n    const handleOnSubmit = (e) => {\n        e.preventDefault()\n        if(description.length > 5){\n            tasksDispatch({\n                type:'ADD_TASK',\n                task: description,\n                token: user.token\n            })\n            setError('');\n            setDescription('');\n        }\n        else{\n            setError('Unable to add the task. Task must have at lease 5 characters')\n        }\n\n        setCount(count +1)\n    }\n\n\n    return (\n        <div>\n            <div className='form__title'>Add a new Task</div>\n            {error !== '' && <div className='form__error'>{error}</div>}\n            <form onSubmit={handleOnSubmit}>\n                <input\n                    className='form__input--add_task form__input '\n                    value ={description}\n                    onChange={ e=> setDescription(e.target.value)}\n                    type=\"text\"/>\n\n                <br/>\n                <button className='button'>Add Task</button>\n            </form>\n        </div>)\n\n}\n\n\nexport {TaskForm as default};","import React from 'react';\nimport TaskForm from './TaskForm'\n\nconst Footer = () => {\n    return (\n        <div className='footer'>\n            <TaskForm />\n        </div>\n    )\n}\n\nexport { Footer as default }","import React from 'react';\nimport Header from \"../components/Header\";\nimport Footer from '../components/Footer'\n\n\nexport const PrivateRoute =({isAuthenticated, component: Component, ...rest })  => {\n\n    return(\n        <div>\n            <Header />\n            <Component { ...rest}/>\n            <Footer />\n        </div>\n    )\n\n}","import React from 'react';\n\nconst LoadingPage = () =>\n    <div className='loader'>\n        <img  className='loader__image' src=\"/images/loader.gif\" alt=\"Loading gif\"/>\n    </div>\n\n\nexport {LoadingPage as default}\n\n","import React, {useState} from 'react';\nimport moment from 'moment';\n// import rmv from '../../public/images/rmv_icon.svg'\n\nconst Task = ({completed, description, _id, completeTask, createdAt, removeTask}) => {\n\n    const [complete, setCompleted ] = useState(completed)\n\n    return (\n        <div className={ completed ? 'task-completed task-container': 'task-container'}>\n\n            <div className='task-container__title'>\n                <span className='task-container__createdAt'>{moment(createdAt).format('MMM Do YY')}</span>\n                {!completed && <span className= 'task-container__remove-task'>\n                <button className='x-button ' onClick={() => {removeTask(_id)}}>\n                    <img className=\"id-img\" src={'/images/rmv_icon.svg'} alt = 'Remove task icon'/>\n                </button>\n            </span>}\n            </div>\n\n            <div className='task-container__description'>{description}</div>\n\n                {completed?\n                    <div className=' button-container--completed button-container'>\n                        <button className='button' onClick={()=>{\n                            setCompleted(!complete)\n                            completeTask(_id, completed)}}>\n                            Do Again</button>\n\n                        <button className='button' onClick={() => {removeTask(_id)\n                        }}>Remove Task</button>\n\n                    </div>\n\n                   : <div className='button-container'>\n                        <button className='button' onClick={()=>{\n                            setCompleted(!complete)\n                            completeTask(_id, completed)}}> Done </button>\n                    </div>}\n        </div>\n    )\n}\n\nexport {Task as default};","import React, { useContext, useState } from 'react';\nimport Task from './Task'\nimport TaskContext from '../context/tasks-context'\nimport UserContext from '../context/user-context'\n\nconst TaskList = (props) => {\n\n    const { user } = useContext(UserContext);\n    const { tasks } = useContext(TaskContext)\n    const { tasksDispatch } = useContext(TaskContext);\n    const [update, setState] = useState(0)\n\n    const completeTask = (id, completed, task) => {\n        tasksDispatch({\n            type:'COMPLETE_TASK',\n            completed,\n            id,\n            token: user.token,\n        });\n        setState(update+1)\n    }\n\n    const removeTask = (id) => {\n        const tasksData = tasks.filter( (task) => (task._id !== id)  )\n        tasksDispatch({\n            type:'REMOVE_TASK',\n            token: user.token,\n            id,\n            tasks: tasksData\n        })\n    }\n\n\n    return (\n        <div className=' task-list content-container'>\n            {tasks.length > 0 ? tasks.map( task => <Task\n                key={task.id}\n                {...task}\n                completeTask={completeTask}\n                removeTask={removeTask}/>) : <div className='empty-task-list'> Add new tasks down </div>}\n        </div>\n    )\n}\n\nexport {TaskList as default}","import React, { useEffect, useState ,useContext} from \"react\";\n\nimport LoadingPage from './LoadingPage'\nimport TasksList from './TasksList'\nimport TaskContext from '../context/tasks-context'\nimport UserContext from '../context/user-context'\n\nconst TasksApp = () => {\n    const { user } = useContext(UserContext);\n    const [loading, setLoading] = useState(false);\n    const { tasksDispatch } = useContext(TaskContext);\n    const userData =  user.user;\n\n    useEffect( () => {\n        fetch('https://task-manager-duani.herokuapp.com/tasks',{\n                method: 'GET',\n                headers: {'cache-control': 'no-cache',\n                        Authorization: `Bearer ${user.token}`}})\n                .then((data)=> data)\n                .then( step => step.json())\n                .then( (tasks) => { tasksDispatch({type:'SET_TASKS', tasks}); return true})\n                .then( () => {setLoading(true)})\n                .catch( e => {console.log(e);})},\n        [userData])\n\n    return(\n            <div>\n                {loading ?  <TasksList /> : <LoadingPage /> }\n            </div>\n        )\n}\n\n\nexport {TasksApp as default };","import React, {useContext} from 'react';\nimport { Router, Switch } from \"react-router-dom\";\nimport createHistory from \"history/createBrowserHistory\";\n\nimport LoginPage from \"../components/LoginPage\";\nimport {PublicRoute} from \"./PublicRouter\";\nimport {PrivateRoute} from \"./PrivateRoute\";\nimport TasksApp from '../components/TasksApp';\nimport UserContext from \"../context/user-context\";\n\n\nexport const history = createHistory();\n\nexport default () =>{\n\n    const {user} = useContext(UserContext);\n\n    return (\n        <Router history={history}>\n            <Switch>\n                <PublicRoute path={'/'} isAuthenticated={!!user.token} component={LoginPage} exact/>\n                <PublicRoute path={'/register'} isAuthenticated={!!user.token} component={LoginPage} exact/>\n                <PrivateRoute path={'/dashboard'} isAuthenticated={!!user.token} component={TasksApp} />\n            </Switch>\n        </Router>\n    )\n}","import React from 'react';\n\n\nconst LoginForm = ({handleLogin, setError, setEmail, setPass, setLocation, error, pass}) =>{\n    return (\n        <div>\n            <form onSubmit={handleLogin}>\n                <div className=\"login-form__container\">\n                <label>EMAIL</label>\n                <input className='form__input--login' type=\"text\" onChange={ (e) => {setEmail( e.target.value )}}/>\n                <label>PASSWORD</label>\n                <input className='form__input--login' type=\"password\" onChange={ (e) => {setPass( e.target.value )}}/>\n                { error && <div className='form__error--login'> {error}</div> }\n                </div>\n                <div className='button-container__login'>\n                    <button className='button'>LOGIN</button>\n\n                </div>\n                <div className='form__change'>\n                    <button className='button--link' onClick={()=> {\n                    setLocation('register');\n                    setError(false)\n                }}>REGISTER</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n\nexport {LoginForm as default};","import React from 'react';\n\n\nconst RegisterForm = ({setEmail, setPass, setName, setAge, handleRegister, setError, setLocation, error}) => {\n\n    return (\n        <div>\n            <form onSubmit={handleRegister}>\n                <div className=\"register-form__container\">\n                <label>NAME</label>\n                <input className='form__input--login' type=\"text\" onChange={ (e) => {setName( e.target.value )}}/>\n                <label>EMAIL</label>\n                <input className='form__input--login' type=\"text\" onChange={ (e) => {setEmail( e.target.value )}}/>\n                <label>PASSWORD</label>\n                <input className='form__input--login' type=\"password\" onChange={ (e) => {setPass( e.target.value )}}/>\n                <label>AGE</label>\n                <input className='form__input--login' type=\"text\" onChange={ (e) => {setAge( e.target.value )}}/>\n                { error && <div className='form__error--login'> {error}</div> }\n            </div>\n                <div className=\"button-container__login\">\n                    <button  className='button' >REGISTER</button>\n                </div>\n                <div className='form__change'>\n                    Already registered? <button  className='button--link '  onClick={()=> {setLocation('login'); setError(false)}}>LOGIN</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport {RegisterForm as default}","import React, {useState, useContext } from 'react';\nimport UserContext from \"../context/user-context\";\nimport {history} from '../routers/AppRouter'\nimport LoginForm from './LoginForm'\nimport RegisterForm from './RegisterForm'\nconst validator = require('validator');\n\n\nconst LoginPage = (props) => {\n\n\n    //  STATES FOR FORM\n\n    const [email, setEmail] = useState('')\n    const [password, setPass] = useState('')\n    const [age, setAge] = useState(0);\n    const [name, setName] = useState('')\n\n\n    // STATES FOR RENDER\n\n    const [location, setLocation] = useState('login')\n    const [error, setError] = useState(false)\n\n    const {userDispatch} = useContext(UserContext);\n\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n\n        if(email === '' || !(validator.isEmail(email))){\n            setError('Non valid email provided, please try again')\n        }\n        else{\n            setError(false)\n            const response = fetch('https://task-manager-duani.herokuapp.com/users/login', {\n                method: 'POST',\n                headers: {\n                    'cache-control': 'no-cache',\n                    'Content-Type': 'application/json'},\n                body:JSON.stringify( { email, password} )})\n                .then( (res) => { console.log(res)\n                    return res.json()}).then((data)=>{\n                    console.log(data)\n                    userDispatch({type: 'LOGIN' ,user: (data.user) ,token: (data.token)})\n                    setError(false)\n                    return ({user: data.user, token: data.token});\n                }).catch(e=> {\n                    setError('Email or password are not correct')\n                })\n\n\n            response.then((data) => {\n                if(data.token){\n                    history.push('/dashboard')\n                    return true;\n                }\n            }).catch( e => {\n                console.log(e);})\n\n        }\n\n    }\n\n    const handleRegister =  (e) => {\n        e.preventDefault();\n\n        if(email === '' || !(validator.isEmail(email))){\n            setError('Non valid email provided, please try again')\n        }else if(password.length < 7){\n            setError('Password must have at least 7 letters')\n        }else if(name===''){\n            setError('Unvalid name')\n        }\n        else if(password.toLowerCase().includes('password')){\n            setError('Password can not contain the word \"password\"')\n        }\n        else if(age < 0){ setError('Age must be positive number ') }\n\n        else{\n            setError(false)\n            fetch( 'https://task-manager-duani.herokuapp.com/users', {\n                method: 'POST',\n                headers: {\n                    'cache-control': 'no-cache',\n                    'Content-Type': 'application/json' },\n                body:  JSON.stringify({name, age, email, password})})\n                .then( data => data)\n                .then( data => {\n\n                    const response = fetch('https://task-manager-duani.herokuapp.com/users/login', {\n                        method: 'POST',\n                        headers: {\n                            'cache-control': 'no-cache',\n                            'Content-Type': 'application/json'},\n                        body:JSON.stringify({ email,  password }\n                        )}\n                    ).then( (res) => {\n                        return res.json()}).then((data)=>{\n                        userDispatch({type: 'LOGIN' ,user: (data.user) ,token: (data.token)})\n                        return ({user: data.user, token: data.token});\n                    }).catch(e=> {setError('There is already user with this email address')})\n\n                    response.then((data) => {\n                        if(data.token){\n                            setError('false')\n                            history.push('/dashboard')\n                            return true;\n                        }\n                    }).catch( e => {\n                        console.log(e);})\n\n                })\n                .catch(e => e)\n\n\n        }\n\n    }\n\n\n\n    return(\n        <div className='box_layout'>\n\n            {location === 'login' ?\n                (<div className='box'>\n                    <div className=\"box-title\">LOGIN</div>\n                    <div className='box-form'>\n                    <LoginForm\n                        handleLogin={handleLogin}\n                        email={email}\n                        pass={password}\n                        setEmail={setEmail}\n                        setError={setError}\n                        setPass={setPass}\n                        error={error}\n                        setLocation={setLocation}\n                    />\n\n                    </div>\n                </div>)\n                    :\n                (<div className='box--register box'>\n                    <div className=\"box-title\"> REGISTER</div>\n                    <div className='box-form'>\n                    <RegisterForm\n                        email={email}\n                        setError={setError}\n                        pass={password}\n                        setEmail={setEmail}\n                        setPass={setPass}\n                        name={name}\n                        setName={setName}\n                        age={age}\n                        setAge={setAge}\n                        setLocation={setLocation}\n                        error={error}\n                        handleRegister={handleRegister}\n                    /></div>\n                </div>)\n                }\n\n        </div>\n\n\n    )\n}\n\nexport {LoginPage as default};","const userReducer = (state = {user:null}, action) => {\n    switch (action.type){\n\n        case 'LOGIN':\n            const userData = JSON.stringify(action.user )\n            localStorage.setItem('user',userData);\n            localStorage.setItem('token', action.token);\n            return ({user:action.user, token:action.token})\n\n        case 'SET_USER':\n            const user = JSON.parse(localStorage.getItem('user'));\n            const token = localStorage.getItem('token')\n            return ({ user, token })\n\n        case 'LOGOUT':\n            localStorage.removeItem('user');\n            localStorage.removeItem('token');\n            return ({});\n\n\n        case 'REGISTER':\n            fetch(`https://task-manager-duani.herokuapp.com/users`, {\n                method: 'POST',\n                headers:\n                    { 'Postman-Token': '1ac860e2-7214-468c-821f-b9c3c8bd10ec',\n                        'cache-control': 'no-cache',\n                        'Content-Type': 'application/json' },\n                body:\n                    JSON.stringify({ name: action.name,\n                        age : action.age,\n                        email: action.email,\n                        password: action.password })})\n                .then( data => {console.log(data)})\n                .catch( e => {console.log(e); return e})\n            break\n\n        default:\n                return state;\n    }\n\n}\n\nexport {userReducer as default};","import uid from 'uid';\nconst taskReducerDefaultState = [];\n\nconst taskReducer = (state =taskReducerDefaultState, action) => {\n    switch (action.type) {\n\n        case 'ADD_TASK':\n           let error = false;\n           const data = fetch('https://task-manager-duani.herokuapp.com/tasks', {\n                method: 'POST',\n                headers:\n                    {'cache-control': 'no-cache',\n                        Authorization: `Bearer ${action.token}`,\n                        'Postman-Token': '5813d003-9a93-4d8f-9fdc-cf6adbbb5d2f',\n                        'Content-Type': 'application/json' },\n                body: JSON.stringify({ description: action.task }),\n                json: true })\n               .then((response) =>  response.json())\n                .then((json) => {\n                    console.log(json)\n                    return json\n                })\n                .catch(e=>{error=true})\n\n            const task = {\n                    completed: false,\n                    description: action.task,\n                    _id: uid()\n                }\n\n                data.then(res => {task._id =res._id})\n            return error ? ('Not able to set task') :([...state, task]);\n\n        case 'REMOVE_TASK':\n            fetch(`https://task-manager-duani.herokuapp.com/tasks/${action.id}`, {\n                method: 'DELETE',\n                headers: {\n                    Authorization: `Bearer ${action.token}`,\n                    'Postman-Token': 'dad7fd97-7fa6-44f0-91f3-44222de56e4f',\n                    'cache-control': 'no-cache'}})\n                .catch(e => e)\n            return  action.tasks\n\n        case 'COMPLETE_TASK':\n            fetch(`https://task-manager-duani.herokuapp.com/tasks/${action.id}`, {\n                method: 'PATCH',\n                headers:\n                    { 'Postman-Token': '20d45446-b56a-492c-b53e-420a79caac41',\n                        Authorization: `Bearer ${action.token}`,\n                        'cache-control': 'no-cache',\n                        'Content-Type': 'application/json' },\n                body: JSON.stringify({ completed: !action.completed }),\n                json: true })\n                .catch(e=> e)\n            return state.map( (task) =>  (task._id === action.id) ?  ({...task, completed:!action.completed}) :  (task));\n\n        case 'SET_TASKS':\n            return action.tasks\n\n        default:\n            return state;\n    }\n}\n\nexport { taskReducer as default };","import React, {useEffect, useReducer} from 'react';\nimport ReactDOM from 'react-dom';\nimport LoginPage from './components/LoginPage';\nimport UserReducer from \"./reducers/users\";\nimport UserContext from './context/user-context';\nimport AppRouter, {history} from \"./routers/AppRouter\";\nimport TasksReducer from \"./reducers/tasks\";\nimport TaskContext from \"./context/tasks-context\";\nimport './styles/styles.scss'\n// require(\"babel-polyfill\");\n\n\nlet isAuth = localStorage.getItem('token');\n\nconst renderApp = () => {\n    if(!isAuth){\n        isAuth = true;\n        ReactDOM.render( <Index/> , document.getElementById('app'))\n        history.push('/dashboard');\n    }\n}\n\nconst Index = () => {\n\n    const [user, userDispatch] = useReducer(UserReducer, {});\n    const [tasks, tasksDispatch] = useReducer(TasksReducer, []);\n\n    useEffect( () => {\n        if(JSON.parse(localStorage.getItem('user')) !== null ) {\n            userDispatch({type:'SET_USER'})\n            renderApp()\n        }\n    },[])\n\n    useEffect( () => {\n        if (user.token !== undefined){\n                renderApp()\n        }\n    }, [user])\n\n\n    return (\n        <UserContext.Provider value={{user, userDispatch}}>\n            <TaskContext.Provider value={{tasks, tasksDispatch}} >\n                {!!isAuth ?\n                    <AppRouter/> :\n                    <LoginPage />}\n            </TaskContext.Provider>\n        </UserContext.Provider>)\n}\n\nReactDOM.render( <Index />, document.getElementById('app'))\n\n\n\n\n\n\n\n"],"sourceRoot":""}